export declare type FileType = 'FOLDER' | 'FILE' | 'AUDIO' | 'VIDEO' | 'IMAGE' | 'ARCHIVE' | 'PDF' | 'TEXT' | 'SWF';
export declare const FileSortOptions: {
    readonly NAME_ASC: "NAME_ASC";
    readonly NAME_DESC: "NAME_DESC";
    readonly SIZE_ASC: "SIZE_ASC";
    readonly SIZE_DESC: "SIZE_DESC";
    readonly DATE_ASC: "DATE_ASC";
    readonly DATE_DESC: "DATE_DESC";
    readonly MODIFIED_ASC: "MODIFIED_ASC";
    readonly MODIFIED_DESC: "MODIFIED_DESC";
};
export declare type FileSortOption = typeof FileSortOptions[keyof typeof FileSortOptions];
export interface IFile extends Record<string, any> {
    id: number;
    parent_id: number;
    name: string;
    size: number;
    file_type: FileType;
    content_type: string;
    extension: string;
    crc32: string;
    created_at: string;
}
export interface IGetStartFromResponse {
    start_from: number;
}
export interface ISearchResponse {
    files: IFile[];
    total: number;
    cursor: string;
}
