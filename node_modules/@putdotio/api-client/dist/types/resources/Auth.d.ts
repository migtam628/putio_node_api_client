import PutioAPIClient from '../client';
export default class Auth {
    private client;
    constructor(client: PutioAPIClient);
    GetLoginURL({ redirectURI, responseType, state, clientID, clientName, }: {
        redirectURI: string;
        responseType: string;
        state: string;
        clientID: string;
        clientName?: string;
    }): string;
    Login({ username, password, app, }: {
        username: string;
        password: string;
        app?: {
            client_id: string;
            client_secret: string;
        };
    }): Promise<import("..").IPutioAPIClientResponse<any>>;
    Logout(): Promise<import("..").IPutioAPIClientResponse<any>>;
    Register(data: any): Promise<import("..").IPutioAPIClientResponse<any>>;
    Exists(key: string, value: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    GetVoucher(code: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    GetGiftCard(code: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    GetFamilyInvite(code: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    ForgotPassword(mail: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    ResetPassword(key: string, newPassword: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    GetCode(clientID: string, clientName?: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    CheckCodeMatch(code: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    LinkDevice(code: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    Grants(): Promise<import("..").IPutioAPIClientResponse<any>>;
    RevokeApp(id: number): Promise<import("..").IPutioAPIClientResponse<any>>;
    Clients(): Promise<import("..").IPutioAPIClientResponse<any>>;
    RevokeClient(id: string): Promise<import("..").IPutioAPIClientResponse<any>>;
    RevokeAllClients(): Promise<import("..").IPutioAPIClientResponse<any>>;
    ValidateToken(): Promise<import("..").IPutioAPIClientResponse<any>>;
}
