import PutioAPIClient from '../client';
export default class Tranfers {
    private client;
    constructor(client: PutioAPIClient);
    Add({ url, saveTo, callbackUrl, }: {
        url: string;
        saveTo: number;
        callbackUrl?: string;
    }): Promise<import("..").IPutioAPIClientResponse<any>>;
    Get(id: number): Promise<import("..").IPutioAPIClientResponse<any>>;
    Query(): Promise<import("..").IPutioAPIClientResponse<any>>;
    ClearAll(): Promise<import("..").IPutioAPIClientResponse<any>>;
    Cancel(ids?: number[]): Promise<import("..").IPutioAPIClientResponse<any>>;
    Analysis(links?: string[]): Promise<import("..").IPutioAPIClientResponse<any>>;
    StartFetching(magnets: any): Promise<import("..").IPutioAPIClientResponse<any>>;
    Retry(id: number): Promise<import("..").IPutioAPIClientResponse<any>>;
    Reannounce(id: number): Promise<import("..").IPutioAPIClientResponse<any>>;
    Count(): Promise<import("..").IPutioAPIClientResponse<any>>;
    CreateTorrent({ cursor, excludeIds, name, trackers, isPrivate, ids, }: {
        name: string;
        trackers: string;
        isPrivate: boolean;
        cursor?: string;
        ids: number[];
        excludeIds: number[];
    }): Promise<import("..").IPutioAPIClientResponse<any>>;
}
